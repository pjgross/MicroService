apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tickets
  template:
    metadata:
      labels:
        app: tickets
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "api/tickets/metrics"
        prometheus.io/port: "3000"
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - tickets-mongo
              topologyKey: "kubernetes.io/hostname"
      initContainers: # wait for the mongodb to respond before starting pods
        - name: init-db
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -z tickets-mongo-srv:27017; do echo waiting for tickets-mongo-srv; sleep 2; done;",
            ]
      containers:
        - name: tickets
          image: registry.gitlab.com/microservice_example/ticketing/tickets:prod
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/tickets/healthz
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          env:
            - name: NATS_URL
              valueFrom:
                configMapKeyRef:
                  name: ticketing # The ConfigMap this value comes from.
                  key: NATS_URL # The key to fetch.
            - name: NATS_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  name: ticketing # The ConfigMap this value comes from.
                  key: NATS_CLUSTER_ID # The key to fetch.
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MONGO_URI
              value: "mongodb://tickets-mongo-srv:27017/tickets"
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_KEY
          ports:
            - containerPort: 3000
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-srv
spec:
  type: ClusterIP
  selector:
    app: tickets
  ports:
    - name: tickets
      protocol: TCP
      port: 3000
      targetPort: 3000
